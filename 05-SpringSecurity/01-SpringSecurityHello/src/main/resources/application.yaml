server:
  port: 8081
spring:
  application:
    name: SpringSecurityHello


logging:
  level:
    web: DEBUG
#    org.springframework: DEBUG
#
#2024-02-10T12:49:30.940+09:00 DEBUG 10308 --- [SpringSecurityHello] [           main] o.s.b.w.s.ServletContextInitializerBeans : Mapping filters: springSecurityFilterChain urls=[/*] order=-100, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
#
#  characterEncodingFilter urls=[/*] order=-2147483648,
#  formContentFilter urls=[/*] order=-9900,
#  requestContextFilter urls=[/*] order=-105
#
#  springSecurityFilterChain urls=[/*] order=-100,
#
#
#
#org.springframework.security.web.session.DisableEncodeUrlFilter@7b61bf11,
#  org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40247d48,
#  org.springframework.security.web.context.SecurityContextHolderFilter@67022ea,
#  org.springframework.security.web.header.HeaderWriterFilter@25f15f50,
#  org.springframework.web.filter.CorsFilter@3ff54f3d,
#  org.springframework.security.web.csrf.CsrfFilter@276cc8dc,
#  org.springframework.security.web.authentication.logout.LogoutFilter@7e351d7,
#  org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5c9934da,
#  org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1e1eeedd,
#  org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@14c93774,
#  org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2be21396,
#  org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58fbd02e,
#      未ログイン状態でアクセスしてきたユーザに対して、ログイン後、元のリクエストを復元する機能
#　　　　　　RequestCacheの機能により、デフォルトだとHttpSessionにHttpServletRequestの内容が保存されています。
#　　　　　　　　保存場所はSpringSession機能により切り替えます。
#  org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@163042ea,
#  org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62a68bcb,
#  org.springframework.security.web.access.ExceptionTranslationFilter@7a3b7122,
#　　　　　　https://spring.pleiades.io/spring-security/reference/servlet/architecture.html#servlet-exceptiontranslationfilter
#　　　　　下りのみ稼働　後続処理から認証・認可に関する例外がThrowされた場合、その例外の内容に応じて処理を行います。
#　　　　　　認証されていない例外の場合はこのフィルターから認証処理を開始する
#　　　　　　認可に関する例外の場合は　AccessDeniedHandlerに処理が異常されます。（・・・拒否の画面を表示）
#　　　　　　
#  org.springframework.security.web.access.intercept.AuthorizationFilter@4a92c6a9]


