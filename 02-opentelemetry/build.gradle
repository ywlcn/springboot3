buildscript {

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:3.0.6")
        classpath("org.springframework.boot:spring-boot-dependencies:3.0.6")
		classpath("io.spring.gradle:dependency-management-plugin:1.1.3")
        classpath("com.github.node-gradle:gradle-node-plugin:3.5.1")
    }

}

subprojects {

//    plugins {
//        id 'java'
//        id 'org.springframework.boot' version '3.0.6'
//        id 'io.spring.dependency-management' version '1.1.3'
//        id 'org.graalvm.buildtools.native' version '0.9.27'
//    }

	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.springframework.boot'

    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '17'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.springframework.boot:spring-boot-starter-aop"

        implementation "io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:1.31.0"

        //implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
        // exclude spring-cloud-sleuth-brave

        //implementation 'org.springframework.cloud:spring-cloud-sleuth-otel-autoconfigure'


//        implementation 'io.micrometer:micrometer-tracing-bridge-otel'
//        implementation "io.opentelemetry:opentelemetry-exporter-otlp"
//        implementation "io.opentelemetry:opentelemetry-api"
//        implementation "io.opentelemetry:opentelemetry-sdk"
//        implementation "io.opentelemetry:opentelemetry-sdk-metrics"
//        implementation "io.opentelemetry:opentelemetry-exporter-logging"
//        implementation "io.opentelemetry:opentelemetry-exporter-logging-otlp"
//        //implementation "io.opentelemetry:opentelemetry-semconv"
//        implementation "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:1.19.0"
//        implementation "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi"


        implementation "io.micrometer:micrometer-registry-prometheus"



	}
	

	tasks.named('test') {
		useJUnitPlatform()
	}

}

project(':spring-open-telemetry-1') {

	dependencies {

		
	}
}


project(':spring-open-telemetry-2') {

	dependencies {

		
	}
}


project(':spring-manual-open-telemetry-1') {

    dependencies {
        implementation("io.opentelemetry:opentelemetry-api");
        implementation("io.opentelemetry:opentelemetry-sdk");
        implementation("io.opentelemetry:opentelemetry-sdk-metrics");
        implementation("io.opentelemetry:opentelemetry-exporter-logging");
        implementation("io.opentelemetry:opentelemetry-semconv:1.19.0-alpha");
        implementation("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:1.19.0-alpha");
        implementation("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi");
    }
}





